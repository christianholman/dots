# === Load Scripting Additions ===

sudo nvram boot-args=-arm64e_preview_abi
sudo yabai --uninstall-sa
sudo yabai --install-sa
sudo yabai --load-sa

yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# === Tiling setting ===

yabai -m config layout                      bsp

yabai -m config top_padding                 5
yabai -m config bottom_padding              5
yabai -m config left_padding                5
yabai -m config right_padding               5
yabai -m config window_gap                  5

yabai -m config mouse_follows_focus         on
yabai -m config focus_follows_mouse         autofocus 

yabai -m config window_topmost              off
yabai -m config window_opacity              off
yabai -m config window_shadow               float

yabai -m config window_border               on
yabai -m config window_border_width         1
yabai -m config active_window_border_color  0xFFE7876D 
yabai -m config insert_feedback_color       0x00010101
yabai -m config normal_window_border_color  0xFF31363C
yabai -m config active_window_opacity       1.0
yabai -m config normal_window_opacity       0.90
yabai -m config split_ratio                 0.50

yabai -m config auto_balance                off

yabai -m config mouse_modifier              fn
yabai -m config mouse_action1               move
yabai -m config mouse_action2               resize
yabai -m config external_bar 		    all:30:0

# ===== Rules ==================================

yabai -m rule --add label="Finder" app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref)" manage=off
yabai -m rule --add label="Safari" app="^Safari$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
yabai -m rule --add label="macfeh" app="^macfeh$" manage=off
yabai -m rule --add label="System Preferences" app="^System Preferences$" title=".*" manage=off
yabai -m rule --add label="App Store" app="^App Store$" manage=off
yabai -m rule --add label="Activity Monitor" app="^Activity Monitor$" manage=off
yabai -m rule --add label="KeePassXC" app="^KeePassXC$" manage=off
yabai -m rule --add label="Calculator" app="^Calculator$" manage=off
yabai -m rule --add label="Dictionary" app="^Dictionary$" manage=off
yabai -m rule --add label="mpv" app="^mpv$" manage=off
yabai -m rule --add label="Software Update" title="Software Update" manage=off
yabai -m rule --add label="About This Mac" app="System Information" title="About This Mac" manage=off
yabai -m rule --add label="HHKB" app="HHKB Keymap Tool" title="About This Mac" manage=off

# ===== Signals ================================

## Sample signal trigger that runs a command
# yabai -m signal --add event=window_title_changed action="${ubersicht_spaces_refresh_command}"
# ubersicht_spaces_refresh_command="osascript -e 'tell application id \"tracesOf.Uebersicht\" to refresh dwidget id \"simple-bar\"'"

# Clean up empty spaces with no windows on them.
# yabai -m signal --add event=space_changed action="sh ~/dotfiles/.config/yabai/scripts/cleanEmptySpaces.sh"

# ===== Spaces =================================
function setup_space {
  local idx="$1"
  local name="$2"
  local space=
  echo "setup space $idx : $name"

  space=$(yabai -m query --spaces --space "$idx")
  if [ -z "$space" ]; then
    yabai -m space --create
  fi

  yabai -m space "$idx" --label "$name"
}

setup_space 1 code
setup_space 2 terminal
setup_space 3 web
setup_space 4 social
setup_space 5 media
setup_space 6 other

for idx in $(yabai -m query --spaces | jq '.[].index | select(. > 6)' | sort -nr); do
  yabai -m space --destroy "$idx"
done

# move some apps automatically to specific spaces
yabai -m rule --add app="^Code$" space=1
yabai -m rule --add app="^kitty$" space=2
yabai -m rule --add app="^Google Chrome$" space=3
yabai -m rule --add app="^Telegram$" space=4
yabai -m rule --add app="^Discord$" space=4
yabai -m rule --add app="^Gather$" space=4
yabai -m rule --add app="^Spotify$" space=5

echo "yabai: configuration loaded...\\n
